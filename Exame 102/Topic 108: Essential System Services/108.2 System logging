Terms and Utilities:

# SISTEMA DE GERENCIAMENTO DE LOGS DO LINUX (SYSLOG).


1) Introdução:

- Sabemos que no sistema existem diversas aplicações que rodam simultaneamente, serviços e ambos vão gerando logs, registros.
- Para que o administrador possa gerenciar esses registros, existe o sistema de gerenciamento de logs.

#syslogd (principal sistema de gerenciamento de logs) * "sislogd" (deamon do syslog, fica sempre em execução)

- hoje em dia temos também o "rsyslog" (melhoria do syslog, performance, sistema de logs mais encontrado em desktops, Debian, Fedora).

- "syslog" é o principal para nosso estudo para a certificação.
- Existe também um 3º sistema de logs que é o "syslog-ng" (não é semelhante ao syslog, muda os arquivos, forma de funcionamento).

#/var/log/ (principal diretório de logs do Linux) * principais arquivos de logs são armazenados aqui nesse diretório.

#/etc/syslog.conf (arquivo de configuração do syslog) * cai na prova.

  > CONFIGURAÇÃO DO SYSLOG: /etc/syslog.conf


1) Exemplo da linha: mail.info                       -/var/log/mail.info 

"-mail é o facility" (origem da mensagem) *auth, authpriv, cron, daemon, kern, lpr, mail, mark news, syslog, user, uucp,local0-local7
local0 (utilizado em script, aplicações...)
"-info é a priority" (é o urgência da mensagem) *notice,warning,error,crit,alert, emerg


2) A prioridade é: "da menos urgente para mais urgente"    debug, info, notice, warning, err, crit, alert, emerg

- O termo "none" ignora a urgência para a facility em questão.  


3) Exemplos de caracteres modificadores de facility e priority "(* , = !)"

mail.*                          -/var/log/mail.log 

- todo registro que vem do facility "mail", (qualquer que seja a priority), vai enviar para "/var/log/mail.log"

daemon.*                        -/var/log/daemon.log

- todo registro que vem do facility "daemon", seja qual for a priority "*", ele vai enviar para o "/var/log/daemon.log"

- posso separar os facilities por virgula (auth,authpriv.*), tudo isso será enviado para o /var/log/auth.log

- na linha abaixo, qualquer que seja o facility, ou o priority, *com excessão do auth e authpriv (none)

*.*;auth,authpriv.none          -/var/log/syslog

- criando um log "somente" para "alert":  mail.=alert                      /var/log/mail.alert (o sinal de = pega apenas o alert)


4) action (destino da mensagem) -> -/var/log/mail.info  (posso enviar para um arquivo de log)
                                -> lpi1, lpi2           (posso enviar para um usuário) *tela do usuário
                                -> @10.0.0.1            (posso enviar para um servidor remoto) *segurança, sempre ter os log, vai que dá pau...

- exemplo com o log "info":
mail.info                       -/var/log/mail.info  (pega tudo que vai depois de info) *info,notice,warning,err,crit,alert,emerg

- criando um log para um servidor de log remoto externo:  "*servidor de log remoto roda na porta 514 no protocolo UDP"
mail.debug                       @10.0.0.100 

mail.emerg                       *                    (joga na tela de todos os usuários a mensagem, terminal)
mail.emerg                       lpi1, lpi2

5) "Toda vez que eu realizar uma alteração no /etc/syslog.conf é preciso reiniciar o syslogd:"

/etc/init.d/inetutils-syslogd  restart (forma de reiniciar o serviço syslogd).


  > INSERINDO LOGS DE TESTES NOS ARQUIVOS:

#logger (gera os arquivos/registros de log, especificando a facility e a priority). *posso usar dentro de um script, de uma aplicação.

$logger -p local0.debug "log de debug de teste"        (opção -p indica a priority que eu quero)

$logger -p local0.crit -t [testes-lpi] "teste de mensagem critica" (opção -t indica a tag que identifica de onde veio o log)


#klogd (kernel log, processo que pega os logs do kernel, e gera um registro no syslog)


  > ROTACIONAMENTO DE LOGS:

- Porque isso é importante?
Imagine que você está gerando logs, registros nos sistemas, de toda a rede, e vai chegar um dia que isso vai ficar sem espaço em disco, tem que ficar removendo logs, tem que ficar criando scripts para gerenciar esses logs.

#logrotate (serve para rotacionar os logs que estão sendo gerados pelo syslogd, rsyslog, syslog-ng)

- encontrado em qualquer distribuição do Linux, Unix

#/etc/logrotate.conf (arquivo de configuração do logrotate)

1) Exemplo de logs rotacionados:

/var/log# ls -l syslog*
-rw-r----- 1 syslog adm 101031 ago  2 17:41 syslog
-rw-r----- 1 syslog adm 106199 ago  1 19:08 syslog.1
-rw-r----- 1 syslog adm 341218 jul 31 19:56 syslog.2.gz
-rw-r----- 1 syslog adm 367315 jul 30 18:08 syslog.3.gz
-rw-r----- 1 syslog adm  97045 jul 29 12:07 syslog.4.gz
-rw-r----- 1 syslog adm  61465 jul 28 13:07 syslog.5.gz
-rw-r----- 1 syslog adm  56230 jul 27 18:10 syslog.6.gz
-rw-r----- 1 syslog adm 389880 jul 26 18:05 syslog.7.gz



















#/etc/logrotate.d/
#journalctl
#/etc/systemd/journald.conf
#/var/log/journal/
