Terms and Utilities:



1) Vamos comecar vendo o comando uname do Linux:


$ uname (ele pode imprimir um serie de informacoes sobre o kernel)

- para mais detalhes podemos usar:

$ uname --help $ whatis uname


a) Mostrando a saida padrao do comando "uname --help"

$ uname --help (mostra ajuda com as opcoes do comando uname)
Usage: uname [OPTION]...
Print certain system information.  With no OPTION, same as -s.

  -a, --all                print all information, in the following order,
                             except omit -p and -i if unknown:
  -s, --kernel-name        print the kernel name
  -n, --nodename           print the network node hostname
  -r, --kernel-release     print the kernel release
  -v, --kernel-version     print the kernel version
  -m, --machine            print the machine hardware name
  -p, --processor          print the processor type or "unknown"
  -i, --hardware-platform  print the hardware platform or "unknown"
  -o, --operating-system   print the operating system
      --help     display this help and exit
      --version  output version information and exit

GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
For complete documentation, run: info coreutils 'uname invocation'


b) Visualizando a opcao do "uname -a"

$ uname -a (mostra todas as informacoes usando essa opcao)
Linux LAPTOP-1IK77O2H 4.4.0-18362-Microsoft #836-Microsoft Mon May 05 16:04:00 PST 2020 x86_64 x86_64 x86_64 GNU/Linux


c) Visualizando a opcao "-r" do uname:


$ uname -r (mostra a release do kernel do sistema)
4.4.0-18362-Microsoft



2) De onde que ele pega essas informacoes? Do diretorio /proc


- pega essas informacoes la do /proc/sys/kernel
- o diretorio /proc (diretorio virtual do sistema)
- no /proc temos as informacoes em memoria do kernel em tempo real, tras as propriedades do kernel em execucao)
- no diretorio /proc/sys/kernel (temos as informacoes representadas em tempo real do kernel em forma de arquivos e diretorios)



3) Como alteramos essas informacoes do kernel em tempo real?


a) no diretorio /proc/sys/fs temos um arquivo de teste, para esse exemplo

- vamos usar o arquivo "file-max" que mostra o total de arquivos que meu sistema pode abrir
- duas formas de se visualizar esse arquivo:

$ cat /proc/sys/file-max
99306


$ /proc/sys/fs$ sysctl fs.file-max
fs.file-max = 9223372036854775807



b) Digitando o comando sysctl -a podemos ver todaos os parametros que temos no /proc/sys


$ sysctl -a


c) Como eu que eu poderia alterar esses valores?

- podemos usar o comando 'echo" 

$ echo 100000 > /proc/sys/fs/file-max (alterei um valor do kernel em tempo real)


- outra forma seria usar o comando "sysctl"

$ sysctl -w fs.file-max=100001


d) Caso eu reinicie o sistema, essas alteracoes serao perdidas no proximo boot, podemos tratar isso para que fique permanente:


- temos aqui um arquivo de configuracao, que e o sysctl.conf, nele podemos definir os valores que queremos alterar.
- no fim do arquivo de conf, executar um "echo >> fs.file-max=100110"
- temos outro arquivo de conf que podemos usar para deixar os valores permanentes:

$ cd /etc/sysctl.d/

- nesse diretorio, pode ser que exista alguma aplicacao que instale algum arquivo nesse diretorio para que possam alterar os valores
diferentes do que foi compilado no kernel da distribuicao.



4) Agora vamos estudar alguns comandos que vimos anteriormente que podem ler os arquivos do /proc


a) primeiro deles seria o lspci:

$ lspci (le as informacoes relacionadas ao barramento PCI do sistema, ao que esta conectado no barramento PCI)

$ lspci -s 
00:02.0 VGA compatible controller: Intel Corporation HD Graphics 620 (rev 02)

$ lspci -s 00:02 -v (mostra mais detalhes desse barramento VGA)


b) outro comando relevante, e o lsusb

$ lsusb (mostra os dispositivos USO conectados no barramento)

$ lsusb -d (mostra mais detalhes de cada dispositivo, basta colocar os numeros que aparecem logo na frente)


- outro comando importante que mostra detalhes do hardware do equipamento "lsdev"


c) mais um comando que pode ajudar nessa parte seria o comando "dmesg"

$ dmesg (le as informacoes do buffer que esta em memoria do kernel, nao de log, buffer onde o kernel guarda essas informacoes)

- vale lembrar que as informacoes de boot, tbm podem ser vistas nos arquivos de logs dos sistema, /var/log/messages e /var/log/syslog






















