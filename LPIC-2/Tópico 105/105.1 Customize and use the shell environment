The following is a partial list of the used files, terms and utilities:

#source (faz com que o comando seguinte seguinte, script,seja executado no bash local, e que não abra um novo bash)

- outra forma seria usar o . ("ponto e espaço")

$. script_variavel.sh 
o script lê e imprime o valor da variavel TESTE
 
O valor da variavel TESTE é: valor1

- usando o comando $source para executar o script:

$./script_variavel.sh 
o script lê e imprime o valor da variavel TESTE
 
O valor da variavel TESTE é:

$source script_variavel.sh 
o script lê e imprime o valor da variavel TESTE
 
O valor da variavel TESTE é: valor1

#alias (comando que permite criar atalhos, sinonimos de comando)

$alias dt="date + %H:%M" (criando um alias para o comando date chamado dt)

$dt
11:52 

$alias (sem argumento mostra todos os alias definidos no bash atual)
alias dt='date +%H:%M'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
alias l='ls -CF'
alias la='ls -A'
alias ll='ls -alF'
alias ls='ls --color=auto'
root@wk2001876:/home/absouza/estudo-LPI# 

function (usado para criar uma sequencia rotinas, de comandos, loops, if, while)

1º) Primeira forma de declarar uma função:

$function funcao1 { (exemplo de declaração de função)
> date;
> uptime;  
> uname -a;
> echo "fim da função"; 
> }

#set (para ver a definição da função que foi declarada)
funcao1 () 
{ 
    date;
    uptime;
    uname -a;
    echo "fim da função"
}

2º) Segunda forma de declarar uma função:

$function funcao2 { date; uptime; } (outra forma de definir uma função)

$funcao2 
qua jun 13 07:35:18 -03 2018
 07:35:18 up 49 min,  1 user,  load average: 0,69, 0,55, 0,48

3º) Terceira forma de se declarar uma função:

$funcao3 () { uptime; uname -v; hostname; } (outra forma de se definir função, sem usar o comando function)

$funcao3
07:37:52 up 52 min,  1 user,  load average: 0,48, 0,55, 0,49
25-Ubuntu SMP Wed May 23 18:02:16 UTC 2018
wk2001876

#listas (arrays em shell) 

$lista=(valor1 valor2 valor3 valor 4) (criando uma lista em shell)

$set | grep lista (usando o comando set para mostrar essa lista)
lista=([0]="valor1" [1]="valor2" [2]="valor3" [3]="valor" [4]="4")

$echo ${lista[2]} (usando o comando echo para mostrar os valores dessa lista, sempre começa de 0, então ele mostrou o valor 3)
valor3

$array=(A B C D) (criando uma lista)

$echo ${array[3]} (mostrando o valor dessa lista)
D

$set | grep array
BASH_REMATCH=([0]="\${array[3" [1]="\${" [2]="array" [3]="3")
array=([0]="A" [1]="B" [2]="C" [3]="D")

OBS: essas listas mostram apenas com o comando set, não está exportado.

$unset array (para apagar essa lista usamos o comando unset)



--Arquivos de configuração GLOBAIS, aplicados a todos os usuários:

#/etc/bash.bashrc (Arquivo executado para toda nova sessão de shell bash, aplicado a todos os usuários.)

#/etc/profile (Arquivo de inicialização executado durante o processo de login de todos os usuários do sistema. Em caso de processo de login, será sempre o primeiro arquivo executado.)

env

export

set

unset


--Arquivos de configuração LOCAIS, de cada usuário:

#~/.bash_profile (Se existir, o arquivo é executado após o /etc/profile, durante o processo de login do usuário.)

#~/.bash_login (Se .bash_profile não existir, o arquivo é executado automaticamente durante o processo de login, após a execução do /etc/profile.)

#~/.profile (Não existindo .bash_profile e .bash_login, o arquivo é executado durante o login após a execução do /etc/profile.)

#~/.bashrc (Executado automaticamente em toda nova sessão de shell bash, logo após o /etc/bash.bashrc.)

#~/.bash_logout (Arquivo executado durante o processo de logout do usuário)


--Principais Variáveis de Ambiente

É importante conhecer a função de algumas variáveis de ambiente existentes no sistema, as principais são:

DISPLAY: Indica às aplicações gráficas onde as janelas deverão ser exibidas. Será estudado no Tópico 106

HISTFILE: Arquivo do histórico de comandos

HISTFILESIZE: Quantidade de linhas/comandos armazenados no arquivo de histórico

HOME: Indica o diretório do usuário atual

LANG: Definição do idioma

LOGNAME e USER: Nome do usuário atual

PATH: Diretórios em que o Linux irá procurar por arquivos executáveis

PS1: Aparência do prompt do shell.

PWD: Diretório atual

OLDPWD: Diretório anterior






