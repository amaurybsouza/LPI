Terms and Utilities:


   > SERVIÇO NetworkManager

#NetworkManager: Existe um serviço no sistema Linux (Ubuntu, Lubuntu, Debian) que se chama NetworkManager, 
esse serviço faz com que todas as configurações de rede sejam realizadas automaticamente pelo sistema, 
ele identifica se está usando rede com fio, sem fio, qual a melhor rede para se usar no momento.

- Para o usuário final isso é muito bom, torna essas configs transparentes.
- Para a gente que está estudando isso, é melhor que seja feito tudo na mãe, usando os arquivos de configuração, em servidores são assim.
- Para isso vamos desabilitar esse serviço no sistema usando o comando abaixo:

$systemctl stop NetworkManager        (parando o serviço NetworkManager)
$systemctl disable NetworkManager     (desativando o serviço de rede)

   
   > ARQUIVOS BÁSICOS DE CONFIGURAÇÃO DE REDE DO LINUX


- Esses arquivos de rede são comuns a qualquer distribuição Linux, e ficam sempre em /etc

1) #/etc/services (mostra todas as listagens de portas públicas do Linux e os serviços que rodam essas portas)


2) #/etc/hostname (arquivo que mostra o nome da máquina)

$cat /etc/hostname
amaury-desktop

3) #/etc/hosts (associa os números IP da rede a nomes, posso usar um domínio também caso seja necessário)

cat /etc/hosts
127.0.0.1       localhost
127.0.1.1       maumau
189.14.98.138   themisto
201.6.144.122   office
192.168.64.199  note

- Se eu digitar o comando $ping note, ele vai entender que o IP 192.168.64.199 está relacionado com o host note.

$ping note
PING note (192.168.64.199) 56(84) bytes of data.
64 bytes from note (192.168.64.199): icmp_seq=1 ttl=64 time=0.055 ms

4) #ping (comando utilizado para identificar o funcionamento da rede, usa o protocolo ICMP enviando pacotes 
para uma máquina e aguarda uma resposta)

$ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
64 bytes from 8.8.8.8: icmp_seq=1 ttl=122 time=20.8 ms


5) #/etc/networks (arquivo utilizado para determinar uma equivalência entre nomes e endereços de rede, 
onde é possível utilizar um nome para nos referirmos a uma rede)

cat /etc/networks 
# symbolic names for networks, see networks(5) for more information
link-local 169.254.0.0

6) #/etc/nsswitch.conf (esse arquivo determina por onde o sistema deve começar a procurar recursos como 
endereços de rede, serviço de autenticação etc)

- Nesse arquivo temos a linha abaixo, que deve ter uma atenção com ela:
- É nessa linha que eu vou saber se ele consulta primeiro os arquivos locais (/etc/hostname, /etc/hosts, 
/etc/networks e depois o DNS).

hosts:          files mdns4_minimal [NOTFOUND=return] dns myhostname   


7) #/etc/resolv.conf (é aonde eu coloco o servidor DNS que eu vou usar na minha máquina)

$cat /etc/resolv.conf
search linuxnewmedia.com.br
nameserver 208.67.222.222
nameserver 208.67.220.220


   > COMANDOS DE CONFIGURAÇÃO DE REDES NO LINUX


1) #ifconfig (esse comando mostra as interfaces de rede da máquina e os IP's que ela está usando).

- O comando ifconfig possui muitas finalidades, mas a principal é definir um endereço IP para a interface de rede.

$ifconfig
enp2s0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        ether 84:7b:eb:fc:65:17  txqueuelen 1000  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Loopback Local)
        RX packets 2214  bytes 200888 (200.8 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 2214  bytes 200888 (200.8 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

wlp1s0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.0.169  netmask 255.255.255.0  broadcast 192.168.0.255
        inet6 fe80::42df:d8c6:7721:1762  prefixlen 64  scopeid 0x20<link>
        ether f8:da:0c:94:91:cf  txqueuelen 1000  (Ethernet)
        RX packets 366896  bytes 497544305 (497.5 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 230631  bytes 29406611 (29.4 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

OBSERVAÇÕES:
- Sem argumentos esse comando mostra as interfaces de rede (eno1,lo)
- A interface (lo) Loopback é uma interface de teste local, sempre vai ter essa interface (127.0.0.1)
- Podemos ver as propriedades e informações de cada interface
- Temos o macadress, mascara da rede, IP, IPv6, se está ativa ou não.

$ifconfig -a  (mostra todas as interfaces de rede, mesmo que não esteja ativa no sistema)


$ifconfig eno1  (mostra apenas a interface eno1)
eno1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 222.123.145.222  netmask 255.255.255.0  broadcast 200.144.112.156
        inet6 fe80::30bd:8f74:2561:370e  prefixlen 64  scopeid 0x20<link>
        ether 64:51:06:62:79:74  txqueuelen 1000  (Ethernet)
        RX packets 403746  bytes 386200899 (386.2 MB)
        RX errors 0  dropped 2641  overruns 0  frame 0
        TX packets 177851  bytes 24854710 (24.8 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
        device interrupt 20  memory 0xf7d00000-f7d20000  


$ifconfig eno1 down  (desativando a interface de rede) *fica em estado down e sem running.


$ifconfig eno1 up  (ativando a interface de rede) *fica em estado up e running.
flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500

$ifconfig eno1 10.0.0.222 up (setando o IP 10.0.0.2 na minha interface de rede eno1) 

- Se eu eu não seto a mascara de rede, o sistema verifica o meu IP e adiciona a mascara automaticamente, no caso, usando a mascara da classe A.


$ifconfig eno1 10.0.0.222 netmask 255.255.255.0 up  (setando o IP e a mascara na interface de rede eno1)


2) #route (mostra e cria rotas de rede, e mostra as rotas padrão)

*linha importante: 0.0.0.0         200.144.112.43  0.0.0.0         UG    100    0        0 eno1

$route -n (mostra informações mais claras sobre as rotas).
Tabela de Roteamento IP do Kernel
Destino         Roteador        MáscaraGen.    Opções Métrica Ref   Uso Iface
0.0.0.0         200.144.112.43  0.0.0.0         UG    100    0        0 eno1
169.254.0.0     0.0.0.0         255.255.0.0     U     1000   0        0 eno1
192.168.56.0    0.0.0.0         255.255.255.0   U     0      0        0 vboxnet0
200.144.112.0   0.0.0.0         255.255.255.0   U     100    0        0 eno1


$route add default gw 10.0.0.1  (adicionando uma rota default na minha rede) *IP do meu roteador, do meu gateway.

$route add -net 172.168.10.0/24 gw 192.168.10.50  (toda vez que eu tiver um pacote cujo o destino é 172.168.10.0
eu vou enviar para esse gw 192.168.10.50).


3) #ip (é uma combinação do ifconfig e do comando route, faz as duas funções).

$ip link show (mostra apenas as interfaces de rede) *semelhante ao ifconfig

1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: eno1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
    link/ether 64:51:06:62:79:74 brd ff:ff:ff:ff:ff:ff
3: vboxnet0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
    link/ether 0a:00:27:00:00:00 brd ff:ff:ff:ff:ff:ff


$ip address show (mostra as interfaces de rede e os IP's que estão configurados nessas interfaces)
 
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: eno1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 64:51:06:62:79:74 brd ff:ff:ff:ff:ff:ff
    inet 200.144.112.165/24 brd 200.144.112.255 scope global noprefixroute eno1
       valid_lft forever preferred_lft forever
    inet6 fe80::30bd:8f74:2561:370e/64 scope link noprefixroute 
       valid_lft forever preferred_lft forever
3: vboxnet0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 0a:00:27:00:00:00 brd ff:ff:ff:ff:ff:ff
    inet 192.168.56.1/24 brd 192.168.56.255 scope global vboxnet0
       valid_lft forever preferred_lft forever
    inet6 fe80::800:27ff:fe00:0/64 scope link 
       valid_lft forever preferred_lft forever


$ip route show  (mostra as rotas) *semelhante ao comando route -n

default via 200.144.112.43 dev eno1 proto static metric 100 
169.254.0.0/16 dev eno1 scope link metric 1000 
192.168.56.0/24 dev vboxnet0 proto kernel scope link src 192.168.56.1 
200.144.112.0/24 dev eno1 proto kernel scope link src 200.144.112.165 metric 100 


$ip addr ad 192.168.10.223/24 dev eno1  (adicionando um IP na interface de rede eno1)

$ip neigh show  (mostra os IP's que estão próximos da minha rede)

200.144.112.144 dev eno1 lladdr b8:88:e3:ea:02:58 STALE
200.144.112.43 dev eno1 lladdr 00:04:96:52:8f:5d REACHABLE


OBSERVAÇÕES: 
- Lembrando que todos esses ajustes serão perdidos assim que eu reiniciar o sistema, não está fixo numa configuração do Linux.
- Está tudo em memória, é temporário, assim que eu reiniciar o sistema esses ajustes deixam de funcionar.
- Na próxima aula vamos ver os arquivos que podemos usar para setar essas configs permanentes no sistema.


   > CONFIGURANDO UMA INTERFACE DE REDE PARA PEGAR DHCP

#dhclient (Comando utilizado para solicitar informações de rede a um servidor dhcp.)

$dhclient eno1 (esse comando vai definir um DHCP, um IP automático para essa minha interface de rede)

- se eu rodar um ifconfig ele mostra um novo IP, um IP que foi dado pelo servidor DHCP. (no caso o meu roteador que está configurado para isso).


   > ARQUIVOS DE CONFIGURAÇÃO DO UBUNTU.


- Esse arquivos vão estar no /etc

1) #/etc/network/interfaces (onde eu configuro minhas interfaces de rede no Ubuntu, Debian)

$cat /etc/network/interfaces
# interfaces(5) file used by ifup(8) and ifdown(8)
auto lo
iface lo inet loopback


A) Como o serviço NetworkManager está desativado, eu preciso ajustar as interfaces de rede nesse arquivo, seguindo o modelo abaixo:


$vim /etc/network/interfaces
# interfaces(5) file used by ifup(8) and ifdown(8)
auto lo
iface lo inet loopback

iface enp0s3 inet static
  address 10.0.0.222
  netmask 255.255.255.0
  gateway 10.0.0.1
  network 10.0.0.0       (endereço de rede opcional)
  broadcast 10.0.0.255   (endereço de broadcast opcional)











2)






























