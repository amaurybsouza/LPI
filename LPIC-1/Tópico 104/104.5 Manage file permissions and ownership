Terms and Utilities:

#chmod (modifica permissões de arquivos e diretórios)

Opções:
-R : modo recursivo.
-v : modo verbose.

Exemplos:

- Aplicando permissão para dono de RWX, adicionando permissão de
gravação para o grupo e especificando permissão de apenas leitura para outros
no arquivo ~/arq1.txt (tudo em modo literal):
$chmod –v u=rwx,g+w,o=r ~arq1.txt

- Retirando a permissão de execução de todos os níveis no arquivo do exemplo acima:
$chmod –x ~/arq1.txt

- Adicionando permissão de gravação para grupo e outros no mesmo arquivo:
$chmod g+w,o+w ~/arq1.txt

PERMISSÃO NO MODO SIMBÓLICO:

#Permissão       Valor simbólico
leitura          r
escrita          w
execução         x

NÍVEIS NO MODO SIMBÓLICO:

#Nível           Valor simbólico
usuário          u
grupo            g
outros           o
tudo             a

OPERADORES:
#Operador        Ação
+                acrescenta a permissão
-                retira a permissão
=                estabelece a permissão

PERMISSÃO NO MODO OCTAL:
#Permissão       Valor
leitura          4
escrita          2
execução         1

#umask (mascara que vai definir a permissão para um diretório e um arquivo)
- Ao serem criados, por padrão, arquivos e diretórios ganham as
permissões 644 e 755, respectivamente. Este fato só ocorre por causa de um
número chamado de Umask. Este número, subtraído de 666 para arquivos e
777 para diretórios, vai determinar as permissões padronizadas para os novos
objetos a serem criados pelo usuário.

Exemplos:

Umask : 022 (padrão)
Permissão padrão para arquivos novos: 644 
Permissão padrão para diretórios novos: 755 

Umask : 024 
Permissão padrão para arquivos novos: 642 
Permissão padrão para diretórios novos: 753 

*Obs: Toda vez que o valor de UMASK tiver algum algarismo
ímpar, o resultado da subtração deve ser acrescido a 1 APENAS NO
CAMPO QUE FICOU ÍMPAR.
Exemplo:

Para UMASK 025: Permissão de diretórios fica como 752 e
arquivos como 642 (já que originalmente deu 641 mas permissão de
execução não pode ser aplicada como padrão para arquivos no Linux).

Geralmente, o valor de Umask é definido em algum dos scripts de logon
de usuário pelo comando umask.

#chown (altera o dono e grupo de diretório e arquivos)
Opções: -R (modo recursivo) -v (modo verbose)

$chown -v amaury.teste.txt (alterando apenas o dono)   $chown -Rv souza:souza teste.txt (alterando o dono e grupo)  $chown -v .souza teste.txt (alterando o grupo)

#chgrp (altera o grupo de arquivos e diretórios)
Opções: -R (modo recursivo) -v (modo verbose)
$chgrp -v suporte relatorio.txt (alterando o grupo do arquivo)

#PERMISSÕES ESPECIAIS (SUID, SGID e STICKY BIT)

-> SUID (permissão usada no dono)
Permite que qualquer usuário tenha a mesma permissão de execução
que o dono sobre o arquivo. Em modo literal, é representada no campo de dono por s

$ls -l /usr/bin/passwd
-rwsr-xr-x 1 root root 59640 jan 25 13:09 /usr/bin/passwd

Ativando o suid no modo simbólico e octal:

$chmod u+s script.sh       $chmod 4755 script.sh

#PERMISSÃO         Valor Simbólico
suid               s
sgid               s  
sticky bit         t

Modo octal : SUID (4) SGID (2) STICKY BIT (1)

-> SGID (permissão usada no grupo)
Faz com que cada arquivo ou subdiretório criado em um diretório seja do
grupo do “diretório pai” (herança de grupo). Em modo literal, é representada no campo de grupo por s.

Ativando o sgid no modo simbólico e octal:

$chmod g+s dir_do_grupo          $chmod 2755 dir_do_grupo

#OBS: se a permissão de execução existir, aparecerá a letra s minuscula, se não tiver a permissão de execução, aparecerá a letra S maiuscula ou T para sticky bit (serve para todas as permissões especiais).

- STICKY BIT (permissão usada para outros)
Proíbe que qualquer usuário que não seja o dono do objeto ou o próprio root exclua o mesmo, mesmo que tenha permissão para isso.
Em modo literal, é representada no campo de outros por t. 

Ativando o sticky bit no modo simbólico e octal:

$chmod -v 1666 teste.txt    $chmod -v o+t teste.txt

OBS: o modo de permissão sticky bit impedem que usuários apaguem arquivos que não tenham sido criado por eles.
