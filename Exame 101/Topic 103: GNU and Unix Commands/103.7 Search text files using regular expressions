Terms and Utilities:

Material utilizado: https://www.vivaolinux.com.br/artigo/Usando-grep-e-egrep

- Um exemplo claro de uso de expressão regular (ou REGEX, como queira) é quando se quer
visualizar apenas os subdiretórios de um diretório através do comando ls :

$ls -l /etc | grep ^d

- Explicação:
O comando ls não tem opção nenhuma que diferencie o tipo do arquivo, portanto, foi preciso
utilizar o grep para buscar dentro da saída dele linhas que, no modo longo do ls, comecem com ‘ d ‘,
papel do metacaractere ^.

|Expressão regular | descrição | exemplo abaixo

^ : Indica o começo da linha. O caractere deve estar do lado esquerdo da expressão. 

^Linux 
-------------------------------------
$ : Indica o final da linha. O caractere deve estar do lado direito da expressão.

Linux$ 
-------------------------------------
[abc] : Conjuntos de caractere-único. Determina qualquer caractere debtre os pertencentes na lista.

[Ll]inux= Linux, linux 
-------------------------------------
[a-z] [0-9] : Range de caractere-único. Determina qualquer caractere dentre os pertencentes ao range.

Versao[5-7]=Versao5,Versao6, Versao7 

#grep (recebe uma exmpressão regular seguida de um arquivo)

$grep Linux texto.txt (mostra as linhas que tem a palavra Linux dentro do texto)

O Sistema Operacional "Linux"
"Linux"
"Linux"Ubuntu
"Linux" Ubuntu
O "Linux"
Origem "Linux"
O"Linux"

$grep -c Linux * (procura por todas os arquivos dentro desse diretórioe mostra as ocorrências de Linux nos arquivos).

#Opções do comando grep
-c: número de ocorrências da palavra/ expressão dentro do texto.
-i: ignora o case-sensitive/maiusculas e minusculas. (essa opção deixe o comando mais pesado)
-r: modo recursivo, procura dentro dos diretórios/subdiretórios.
-E: expande o conjunto de expressões regulares/mesmo que egrep.
-v: mostra os resultados invertidos, exclui a expressão regular do comando, mostra o inverso. 
-o: lista as ocorrências que foram encontradas.
--color: destaca com vermelho onde a ER casou.
-n: exibe o número de linhas que contem o padrão.

#egrep (é o grep com expressões regulares mais avançadas, mais abrangentes, mesmo que grep -E)

#fgrep (não aplica expressões regulares, considera tudo como um texto)

$fgrep 

#sed (substitui um valor por outro ou deletar uma linha que segue um padrão)

$sed '/Linux/d' texto.txt (deleta toda vez que aparecer a palavra Linux)

$sed '/^#/d' texto.txt (apaga todos os comentaŕios do texto)

$sed '/[Ll]inux/d' texto.txt (apaga toda vez que encontrar Linux ou linux)

$sed 's/[Ll]inux/Windows/' texto.txt (troca linux Linux pela palavra Windows no texto)

#regex(7)

- utilizar a expressão regular entre "aspas"

- vamos utilizar a opção egrep que mostra mais opções de expressões regulares.

$egrep "b[aei]g" texto.txt (mostra todas as linhas que tenham a expressão iniciada por "b seguida de aei e com final g")

$egrep "b[a-u]g" texto.txt (pode se usar dessa forma, o egrep mostra as expressões que casem com a letra a até a letra u)

$egrep "^linux" texto.txt  (mostra a palavra Linux no começo da linha)

$egrep "Linux$" texto.txt (mostra a palavra Linux no final da linha)

$egrep "^#" texto.txt (mostra apenas as linhas que estão comentadas)

$egrep -v "^#"  texto.txt (mostra tudo menos o comentário, usar a opção -v que faz o inverso)

#EXEMPLOS DE METACARACTERES:

* (exige que o ultimo caracter (letra g do exemplo abaixo) ocorra nenhuma ou várias vezes)

- o asterico impacta no caracter anterior.

$egrep "b[a-i]g*" texto.txt

$egrep "b[a-i]g*e" texto.txt (o g pode ou não aparecer e depois tem que etr a letra e)

+ (exige que o caracter anterior apareça pelo menos uma vez)

$egrep "b[a-i]g+" texto.txt

? (exige que o caracter anterior apareça nenhuma ou apenas uma vez)

$egrep "b[a-i]g?" texto.txt (a letra g aparece nenhuma ou apenas uma vez)

. (casa com um unico caracter, com qualquer caracter)

- posso adicionar vários pontos, que equivalem a vários caracteres.

$egrep "b[a-i]g." texto.txt

$egrep "O.Linux" texto.txt (mostra todas qualquer caracetr entre a letra O e Linux)

- posso adicionar vários pontos, que equivalem a vários caracteres.

.* (exige que o caracter antes do ponto exista e que tenha qualquer coisa depois)

$egrep "O.*Linux" texto.txt

#ESCAPANDO O CARACTER .

$egrep -i "linux\." texto.txt (escapa o . para que ele se torna um texto e não parte de uma expressão regular)






















