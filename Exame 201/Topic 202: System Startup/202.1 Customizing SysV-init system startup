Terms and Utilities:


### VAMOS APRENDE SOBRE SYSTEMD E  Systemd SysV



- atualmente as distribuicoes usam quase todas o systemd, mais classico, veio do UNIX e passou a ser usado no Linux.
- mas o Systemd passou a ser bem usado e manteve alguns comandos recursos do SysV,  
- se voce usar o Debian 7 ou o CentOS 5 voce provavelmente vera o Init sendo usado.


1) SysV (Init)


1.1) NIVEIS DE EXECUCACAO:

- ele trabalha com runlevels (que vai do 0 ao 6)
- grupos de processos que serao executados.



1.2) PRINCIPAL ARQUIVO DE CONFIGURACAO DO SYSV: 

a) /etc/inittab

b) no comeco do arquivo do inittab existe essa config, que vai setar o default runelevel do sistema.

c) 2 (runlevel): initdefault
# The default runlevel.
  5 id:2:initdefault:

d) Sobre o runlevels:

# Runlevel 0 is halt. (desliga a maquina)
18 # Runlevel 1 is single-user. (single user 1 ou s)
19 # Runlevels 2-5 are multi-user.20 # Runlevel 6 is reboot. (e de 2 ate 5 multi users)
20 # Runlevel 6 is reboot. (reboot)



1.3) MAS COMO QUE ELE FUNCIONA?

- dentro do direotorio /etc/init.d (temos os scripts de inicializacao de cada processo)
- vamos usar um exemplo para que possamos mostrar aqui:
- vamos usar o collectd como exemplo:

a) Verificando o status do servico do collectd:

@ip-172-31-8-61:/etc/init.d# ./collectd status
● collectd.service - Statistics collection and monitoring daemon
Loaded: loaded (/lib/systemd/system/collectd.service; enabled; vendor preset: enabled)
Active: active (running) since Wed 2020-07-15 01:32:39 UTC; 11min ago

b) Parando o servico no init.d:

root@ip-172-31-8-61:/etc/init.d# /etc/init.d/collectd stop
[ ok ] Stopping collectd (via systemctl): collectd.service.


c) se eu ler o arquivo do collectd e basicamente um script.


1.4) DIRETORIOS DE CADA RUN LEVEL:

[root@elliot01 etc]# ls -ld rc*
lrwxrwxrwx.  1 root root  10 Apr  9 08:36 rc0.d -> rc.d/rc0.d
lrwxrwxrwx.  1 root root  10 Apr  9 08:36 rc1.d -> rc.d/rc1.d
lrwxrwxrwx.  1 root root  10 Apr  9 08:36 rc2.d -> rc.d/rc2.d
lrwxrwxrwx.  1 root root  10 Apr  9 08:36 rc3.d -> rc.d/rc3.d
lrwxrwxrwx.  1 root root  10 Apr  9 08:36 rc4.d -> rc.d/rc4.d
lrwxrwxrwx.  1 root root  10 Apr  9 08:36 rc5.d -> rc.d/rc5.d
lrwxrwxrwx.  1 root root  10 Apr  9 08:36 rc6.d -> rc.d/rc6.d
drwxr-xr-x. 10 root root 127 Apr  9 08:36 rc.d
lrwxrwxrwx.  1 root root  13 Apr 15 14:51 rc.local -> rc.d/rc.local


- agora vamos acessar um deles:

root@ip-172-31-8-61:/etc/rc2.d# ls -l
total 0
lrwxrwxrwx 1 root root 15 Jun 11 19:36 S01acpid -> ../init.d/acpid
lrwxrwxrwx 1 root root 16 Jun 11 19:36 S01apport -> ../init.d/apport
lrwxrwxrwx 1 root root 13 Jun 11 19:36 S01atd -> ../init.d/atd
lrwxrwxrwx 1 root root 18 Jul 15 01:32 S01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 26 Jun 11 19:35 S01console-setup.sh -> ../init.d/console-setup.sh
lrwxrwxrwx 1 root root 14 Jun 11 19:34 S01cron -> ../init.d/cron
lrwxrwxrwx 1 root root 14 Jun 11 19:34 S01dbus -> ../init.d/dbus
lrwxrwxrwx 1 root root 21 Jun 11 19:36 S01grub-common -> ../init.d/grub-common
lrwxrwxrwx 1 root root 20 Jun 11 19:36 S01irqbalance -> ../init.d/irqbalance
lrwxrwxrwx 1 root root 22 Jun 11 19:37 S01lvm2-lvmetad -> ../init.d/lvm2-lvmetad
lrwxrwxrwx 1 root root 23 Jun 11 19:37 S01lvm2-lvmpolld -> ../init.d/lvm2-lvmpolld
lrwxrwxrwx 1 root root 15 Jun 11 19:36 S01lxcfs -> ../init.d/lxcfs
lrwxrwxrwx 1 root root 13 Jun 11 19:37 S01lxd -> ../init.d/lxd
lrwxrwxrwx 1 root root 15 Jun 11 19:36 S01mdadm -> ../init.d/mdadm
lrwxrwxrwx 1 root root 23 Jun 11 19:36 S01open-vm-tools -> ../init.d/open-vm-tools
lrwxrwxrwx 1 root root 18 Jun 11 19:36 S01plymouth -> ../init.d/plymouth
lrwxrwxrwx 1 root root 15 Jun 11 19:36 S01rsync -> ../init.d/rsync
lrwxrwxrwx 1 root root 17 Jun 11 19:34 S01rsyslog -> ../init.d/rsyslog
lrwxrwxrwx 1 root root 13 Jun 11 19:36 S01ssh -> ../init.d/ssh
lrwxrwxrwx 1 root root 29 Jun 11 19:36 S01unattended-upgrades -> ../init.d/unattended-upgrades
lrwxrwxrwx 1 root root 15 Jun 11 19:36 S01uuidd -> ../init.d/uuidd


- podemos ver que existem muitos links simbolicos.
- pode notar que existe um padrao entre esses links, veja:

a) A primeira letra dessa lista de links (S de start)

- se tivesse links que comecem com k (qur dizer que ele seria morto o processo)


b) Agora vamos acessar o o direotorio rc.1

root@ip-172-31-8-61:/etc/rc1.d# ls -l
total 0
lrwxrwxrwx 1 root root 13 Jun 11 19:36 K01atd -> ../init.d/atd
lrwxrwxrwx 1 root root 18 Jul 15 01:32 K01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jun 11 19:36 K01ebtables -> ../init.d/ebtables
lrwxrwxrwx 1 root root 20 Jun 11 19:36 K01irqbalance -> ../init.d/irqbalance
lrwxrwxrwx 1 root root 16 Jun 11 19:36 K01iscsid -> ../init.d/iscsid
lrwxrwxrwx 1 root root 22 Jun 11 19:37 K01lvm2-lvmetad -> ../init.d/lvm2-lvmetad
lrwxrwxrwx 1 root root 23 Jun 11 19:37 K01lvm2-lvmpolld -> ../init.d/lvm2-lvmpolld
lrwxrwxrwx 1 root root 15 Jun 11 19:36 K01lxcfs -> ../init.d/lxcfs
lrwxrwxrwx 1 root root 13 Jun 11 19:37 K01lxd -> ../init.d/lxd
lrwxrwxrwx 1 root root 15 Jun 11 19:36 K01mdadm -> ../init.d/mdadm
lrwxrwxrwx 1 root root 20 Jun 11 19:36 K01open-iscsi -> ../init.d/open-iscsi
lrwxrwxrwx 1 root root 23 Jun 11 19:36 K01open-vm-tools -> ../init.d/open-vm-tools
lrwxrwxrwx 1 root root 17 Jun 11 19:34 K01rsyslog -> ../init.d/rsyslog
lrwxrwxrwx 1 root root 13 Jun 11 19:36 K01ufw -> ../init.d/ufw
lrwxrwxrwx 1 root root 15 Jun 11 19:36 K01uuidd -> ../init.d/uuidd

- pode notar que as letras comecam com k (ele usa kill para matar o processo)





### MOSTRANDO O COMANDO NO DEBIAN:

#update-rc.d (esse comando permite mudar os links do rc.d) Veja alguns exemplos;

 ls -l /etc/rc*.d/*collectd*
 lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc0.d/K01collectd -> ../init.d/collectd
 lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc1.d/K01collectd -> ../init.d/collectd
 lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc2.d/S01collectd -> ../init.d/collectd
 lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc3.d/S01collectd -> ../init.d/collectd
 lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc4.d/S01collectd -> ../init.d/collectd
 lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc5.d/S01collectd -> ../init.d/collectd
 lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc6.d/K01collectd -> ../init.d/collectd

- no exemplo acima eu posso visualizar que o collectd e run level 1 ate o 5.
- atraves do comando "update-rc.d" eu consigo mudar isso, eu posso gerenciar isso.


Veja alguns exemplos:

a) Desabilitar o run level 5 do collectd:

etc/rc1.d# update-rc.d collectd disable 5
root@ip-172-31-8-61:/etc/rc1.d#
root@ip-172-31-8-61:/etc/rc1.d# ls -l /etc/rc*.d/*collectd*
lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc0.d/K01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc1.d/K01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc2.d/S01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc3.d/S01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc4.d/S01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc5.d/K01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc6.d/K01collectd -> ../init.d/collectd


b) Ativando o run level novamente usando o comando "update-rc.d":

/etc/rc1.d# update-rc.d collectd enable 5
root@ip-172-31-8-61:/etc/rc1.d# ls -l /etc/rc*.d/*collectd*
lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc0.d/K01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc1.d/K01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc2.d/S01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc3.d/S01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc4.d/S01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc5.d/S01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 15 01:32 /etc/rc6.d/K01collectd -> ../init.d/collectd


c) Agora removendo os links do collectd:

/etc/rc1.d# update-rc.d collectd remove
root@ip-172-31-8-61:/etc/rc1.d# ls -l /etc/rc*.d/*collectd*
ls: cannot access '/etc/rc*.d/*collectd*': No such file or directory


d) Para restaurar usamos outra opcao:

/etc/rc1.d# update-rc.d collectd defaults
:/etc#  ls -l /etc/rc*.d/*collectd*
lrwxrwxrwx 1 root root 18 Jul 16 01:36 /etc/rc0.d/K01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 16 01:36 /etc/rc1.d/K01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 16 01:36 /etc/rc2.d/S01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 16 01:36 /etc/rc3.d/S01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 16 01:36 /etc/rc4.d/S01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 16 01:36 /etc/rc5.d/S01collectd -> ../init.d/collectd
lrwxrwxrwx 1 root root 18 Jul 16 01:36 /etc/rc6.d/K01collectd -> ../init.d/collectd


### MOSTRANDO O COMANDO NO CENTOS:

#chkconfig (comando similar ao comando update-rc.d)

- faz o gerenciamento dos links dos run levels.




#runlevel (esse comando mostra o run level que eu estou no momento)

$ runlevel
N 3


#init (esse comando muda de run level)

$ init 3


#telinit (comando simular ao comando init, ele muda de runlevel)

$ telinit 5





     >  FALANDO SOBRE O SYSTEMD


- comecando agora a falar sobre o Systemd (que e o sistema de gerencia de processos, start/stop de procesos
atualmente usado em todas as distribuicoes Linux, tornou-se padrao)

- ele e baseado em UNITS, que podem ser de diversos tipos de units
- ele possui services (como se fossem os daemons)
- ele possui targets (grupos de UNITS)


1) Configuracoes do Systemd:

# /lib/systemd/system (principal arquivo de configuracao do SystemD)

- dentro desse arquivo tem as UNITS, servicos
- o que define as UNITS sao o ".alguma coisa" veja o exemplo abaixo:

[root@ip-172-31-12-118 system]# ls -l
total 884
-rw-r--r--. 1 root root  275 Sep 26  2018 arp-ethers.service
-rw-r--r--. 1 root root 1512 Jan  8  2020 auditd.service
lrwxrwxrwx. 1 root root   14 Apr 15 14:51 autovt@.service -> getty@.service
-rw-r--r--. 1 root root  956 Apr 15 14:50 basic.target
drwxr-xr-x. 2 root root    6 Apr 15 14:51 basic.target.wants
-rw-r--r--. 1 root root  419 Jun 22  2018 bluetooth.target
-rw-r--r--. 1 root root  209 May 22  2019 chrony-dnssrv@.service
-rw-r--r--. 1 root root  138 May 22  2019 chrony-dnssrv@.timer
-rw-r--r--. 1 root root  491 May 22  2019 chronyd.service
-rw-r--r--. 1 root root  472 May 10  2019 chrony-wait.service
-rw-r--r--. 1 root root  491 May  4 11:31 cloud-config.service
-rw-r--r--. 1 root root  536 May  4 11:31 cloud-config.target


# /etc/systemd/system (outro diretorio do SystemD)

- ele possui os mesmos arquivos do direotorio anterior
- mas uma coisa importante:

OBS: o que tem dentro do diretorio /etc/systemd/system tem mais preferencia do que o /lib/systemd/system


1) Como que eu defino um runlevel default no SustemD:

- e definido por uma UNIT chamada default.target

[root@ip-172-31-12-118 system]# ls -l default.target
lrwxrwxrwx. 1 root root 16 Apr 15 14:51 default.target -> graphical.target

- pode ver que ela esta chamando a target principal (graphical.target)



2) Agora mostrando os runlevels (igual do SystemV)

- o SystemD nao trabalha com aqueles runlevels de 0 ate 6
- o conceito de runlevel para o SystemD sao os targets:

lrwxrwxrwx. 1 root root   15 Apr 15 14:51 runlevel0.target -> poweroff.target
lrwxrwxrwx. 1 root root   13 Apr 15 14:51 runlevel1.target -> rescue.target
lrwxrwxrwx. 1 root root   17 Apr 15 14:51 runlevel2.target -> multi-user.target
lrwxrwxrwx. 1 root root   17 Apr 15 14:51 runlevel3.target -> multi-user.target
lrwxrwxrwx. 1 root root   17 Apr 15 14:51 runlevel4.target -> multi-user.target
lrwxrwxrwx. 1 root root   16 Apr 15 14:51 runlevel5.target -> graphical.target
lrwxrwxrwx. 1 root root   13 Apr 15 14:51 runlevel6.target -> reboot.target

- tem a mesma do que a do Init visto anteriormente



# /run/systemd/system (outro diretorio do SystemD)

- posso ter alguma configuracao aquim normalmente sao configuracoes temporarias

OBS: Ordem de prioridade dos diretorios do SystemD:



> /etc/systemd/system >  /run/systemd/system  > /lib/systemd/system



# systemd-delta (esse comando olha os 3 diretorios e ve qual deles esta sobrescrevendo o outro diretorio...)


 $ whatis systemd-delta
 systemd-delta (1)    - Find overridden configuration files




   > COMO QUE GERENCIA TUDO ISSO VIA COMANDO: "systemctl"


1) #systemctl list-units  (lista as unidades existentes e as descricoes de cada)

[root@ip-172-31-12-118 system]# systemctl list-units
UNIT                                             LOAD   ACTIVE SUB       DESCRIPTION
proc-sys-fs-binfmt_misc.automount                loaded active waiting   Arbitrary Executable File Formats File System Automount Point
sys-devices-platform-serial8250-tty-ttyS1.device loaded active plugged   /sys/devices/platform/serial8250/tty/ttyS1
sys-devices-platform-serial8250-tty-ttyS2.device loaded active plugged   /sys/devices/platform/serial8250/tty/ttyS2
sys-devices-platform-serial8250-tty-ttyS3.device loaded active plugged   /sys/devices/platform/serial8250/tty/ttyS3
sys-devices-pnp0-00:06-tty-ttyS0.device          loaded active plugged   /sys/devices/pnp0/00:06/tty/ttyS0
sys-devices-vbd\x2d768-block-xvda-xvda1.device   loaded active plugged   /sys/devices/vbd-768/block/xvda/xvda1
sys-devices-vbd\x2d768-block-xvda-xvda2.device   loaded active plugged   /sys/devices/vbd-768/block/xvda/xvda2
sys-devices-vbd\x2d768-block-xvda.device         loaded active plugged   /sys/devices/vbd-768/block/xvda
sys-devices-vif\x2d0-net-eth0.device             loaded active plugged   /sys/devices/vif-0/net/eth0
sys-module-configfs.device                       loaded active plugged   /sys/module/configfs
sys-subsystem-net-devices-eth0.device            loaded active plugged   /sys/subsystem/net/devices/eth0



2) #systemctl default (entra no target default)



3) #systemctl isolate (muda de target)



4) Agora vamos testar um servico usando o comando systectl:


- vamos primeiro listar alguns servicos:

$ ps axu | less

$ cd /lib/systemd/system

- vamos usar o servico da CRON:

ls -l *cron*
-rw-r--r-- 1 root root 776 jul 16  2019 anacron.service
-rw-r--r-- 1 root root 154 jul 16  2019 anacron.timer
-rw-r--r-- 1 root root 316 fev 11 00:43 cron.service


a) #systemctl status cron (mostra o status do servico cron)

[root@ip-172-31-12-118 system]# systemctl status crond
● crond.service - Command Scheduler
Loaded: loaded (/usr/lib/systemd/system/crond.service; enabled; vendor preset: enabled)
Active: active (running) since Sun 2020-07-19 16:57:43 UTC; 2h 52min ago
Main PID: 985 (crond)
Tasks: 1 (limit: 4855)
Memory: 2.8M
CGroup: /system.slice/crond.service
└985 /usr/sbin/crond -n



b) #systemctl stop cron (para o servico da cron)

● crond.service - Command Scheduler
   Loaded: loaded (/usr/lib/systemd/system/crond.service; enabled; vendor preset: enabled)
      Active: inactive (dead) since Sun 2020-07-19 19:58:16 UTC; 2s ago
        Process: 985 ExecStart=/usr/sbin/crond -n $CRONDARGS (code=exited, status=0/SUCCESS)
	 Main PID: 985 (code=exited, status=0/SUCCESS)


c) #systemctl enable cron (ativa para que o servico seja iniciado no boot da maquina)


d) #systemctl disable cron (desativa o servico  e nao sobe no boot da maquina)





